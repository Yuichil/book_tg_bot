from aiogram import F
from aiogram import Router
from aiogram.filters import Command, or_f
from aiogram.types import Message

from keyboards.inline import start

command_router = Router()


@command_router.message(or_f(Command("start"), (F.text == "–î–æ–º üè†")))
async def command_start_handler(message: Message) -> None:
    text = (
        "–ü—Ä–∏–≤–µ—Ç, —è BookBuddy! –Ø —Ç–≤–æ–π –∫–Ω–∏–∂–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç! "
        "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –Ω–∞–π—Ç–∏, –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –∫–Ω–∏–≥–∞—Ö. "
        "–ï—â—ë —è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–∞—Ö –∏ –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–æ–∑–¥–∞—Ç—å —Å–ø–∏—Å–∫–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è. \n\n "
        "–ö–∞–∫—É—é –∫–Ω–∏–≥—É —Ç—ã –∏—â–µ—à—å —Å–µ–≥–æ–¥–Ω—è?")

    await message.answer(text, reply_markup=start)


@command_router.message(or_f(Command("opportunities"), (F.text == "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")))
async def command_opportunities(message: Message) -> None:
    text = ("–í–æ—Ç, —á—Ç–æ —è –º–æ–≥—É: \n\n"
            "<b>1. –ü–æ–∏—Å–∫ –∫–Ω–∏–≥:</b>\n- –í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏, –∞–≤—Ç–æ—Ä–∞ –∏–ª–∏ –∂–∞–Ω—Ä, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ, —Ä–µ–π—Ç–∏–Ω–≥, –æ—Ç–∑—ã–≤—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞, –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞).\n\n"
            "<b>2. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n- –Ø —Å–æ—Å—Ç–∞–≤–ª—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ —Å–≤–æ–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö, –∏ —è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–º–æ–∂–Ω–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—å—Å—è.\n\n"
            "<b>3. –°–ø–∏—Å–∫–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è:</b>\n- –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ —Å–ø–∏—Å–∫–∞–º–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è.\n\n"
            "<b>4. –û–±—Å—É–∂–¥–µ–Ω–∏—è –∏ —Ä–µ—Ü–µ–Ω–∑–∏–∏:</b>\n- –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–ª—è—Ç—å —Ä–µ—Ü–µ–Ω–∑–∏–∏ –Ω–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ –∏/–∏–ª–∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –ú–æ–∂–Ω–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –æ–ø—Ä–æ—Å—ã –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –Ω–∞ —Ç–µ–º—É –ª—é–±–∏–º—ã—Ö –∫–Ω–∏–≥.\n\n"
            "<b>5. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏ –∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏:</b>\n- –Ø –º–æ–≥—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö –∏ –æ–Ω–ª–∞–π–Ω-—Å–µ—Ä–≤–∏—Å–∞—Ö –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –∏–ª–∏ –∞—Ä–µ–Ω–¥—ã –∫–Ω–∏–≥.\n\n"
            "<b>6. –ü–æ–¥–±–æ—Ä–∫–∞ –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é:</b>\n- –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è, –¥–ª—è —Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏—è), –∏ –±–æ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –∫–Ω–∏–≥–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç—Ç–æ–º—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é.\n\n")

    await message.answer(text, reply_markup=start, parse_mode="HTML")


@command_router.message(or_f(Command("search"), (F.text == "–ü–æ–∏—Å–∫ üîç")))
async def command_opportunities(message: Message) -> None:
    text = "–í–≤–µ–¥–∏—Ç–µ —Ñ–ò–û –∞–≤—Ç–æ—Ä–∞ –∏ –Ω–∞–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏"
    await message.answer(text, reply_markup=start)


@command_router.message(or_f(Command("recommendations"), (F.text == "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")))
async def command_rec(message: Message) -> None:
    text = "–í–æ—Ç —á—Ç–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è"
    await message.answer(text, reply_markup=start)


@command_router.message(or_f(Command("compilation"), (F.text == "–ü–æ–¥–±–æ—Ä–∫–∞ üìö")))
async def command_compilation(message: Message) -> None:
    text = "–í–æ—Ç –ø–æ–¥–±–æ—Ä–∫–∞ –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö"
    await message.answer(text, reply_markup=start)


@command_router.message(or_f(Command("yourlist"), (F.text == "–í–∞—à —Å–ø–∏—Å–æ–∫ üìã")))
async def command_yourlist(message: Message) -> None:
    text = "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–∫–ª–∞–¥–æ–∫"
    await message.answer(text, reply_markup=start)


@command_router.message(or_f(Command("reviews"), (F.text == "–û—Ç–∑—ã–≤—ã –∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è üí¨")))
async def command_reviews(message: Message) -> None:
    text = "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ—Ç–∑—ã–≤—ã –æ –∫–Ω–∏–≥–∞—Ö"
    await message.answer(text, reply_markup=start)


@command_router.message(Command("help"))
async def command_help_handler(message: Message) -> None:
    text = ("I am book assistant. This is my commands: \n"
            "/start \n"
            "/about \n"
            "/help \n")
    await message.answer(text)
